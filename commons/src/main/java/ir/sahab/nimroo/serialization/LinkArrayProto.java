// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: linkarray.proto

package ir.sahab.nimroo.serialization;

public final class LinkArrayProto {
  private LinkArrayProto() {}
  public static void registerAllExtensions(
      com.github.os72.protobuf351.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.github.os72.protobuf351.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.github.os72.protobuf351.ExtensionRegistryLite) registry);
  }
  public interface LinkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Link)
      com.github.os72.protobuf351.MessageOrBuilder {

    /**
     * <code>required string link = 1;</code>
     */
    boolean hasLink();
    /**
     * <code>required string link = 1;</code>
     */
    java.lang.String getLink();
    /**
     * <code>required string link = 1;</code>
     */
    com.github.os72.protobuf351.ByteString
        getLinkBytes();

    /**
     * <code>required string anchor = 2;</code>
     */
    boolean hasAnchor();
    /**
     * <code>required string anchor = 2;</code>
     */
    java.lang.String getAnchor();
    /**
     * <code>required string anchor = 2;</code>
     */
    com.github.os72.protobuf351.ByteString
        getAnchorBytes();
  }
  /**
   * Protobuf type {@code Link}
   */
  public  static final class Link extends
      com.github.os72.protobuf351.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Link)
      LinkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Link.newBuilder() to construct.
    private Link(com.github.os72.protobuf351.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Link() {
      link_ = "";
      anchor_ = "";
    }

    @java.lang.Override
    public final com.github.os72.protobuf351.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Link(
        com.github.os72.protobuf351.CodedInputStream input,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.github.os72.protobuf351.UnknownFieldSet.Builder unknownFields =
          com.github.os72.protobuf351.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.github.os72.protobuf351.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              link_ = bs;
              break;
            }
            case 18: {
              com.github.os72.protobuf351.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              anchor_ = bs;
              break;
            }
          }
        }
      } catch (com.github.os72.protobuf351.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.github.os72.protobuf351.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.github.os72.protobuf351.Descriptors.Descriptor
        getDescriptor() {
      return LinkArrayProto.internal_static_Link_descriptor;
    }

    protected com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LinkArrayProto.internal_static_Link_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              LinkArrayProto.Link.class, LinkArrayProto.Link.Builder.class);
    }

    private int bitField0_;
    public static final int LINK_FIELD_NUMBER = 1;
    private volatile java.lang.Object link_;
    /**
     * <code>required string link = 1;</code>
     */
    public boolean hasLink() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string link = 1;</code>
     */
    public java.lang.String getLink() {
      java.lang.Object ref = link_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.github.os72.protobuf351.ByteString bs = 
            (com.github.os72.protobuf351.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          link_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string link = 1;</code>
     */
    public com.github.os72.protobuf351.ByteString
        getLinkBytes() {
      java.lang.Object ref = link_;
      if (ref instanceof java.lang.String) {
        com.github.os72.protobuf351.ByteString b = 
            com.github.os72.protobuf351.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        link_ = b;
        return b;
      } else {
        return (com.github.os72.protobuf351.ByteString) ref;
      }
    }

    public static final int ANCHOR_FIELD_NUMBER = 2;
    private volatile java.lang.Object anchor_;
    /**
     * <code>required string anchor = 2;</code>
     */
    public boolean hasAnchor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string anchor = 2;</code>
     */
    public java.lang.String getAnchor() {
      java.lang.Object ref = anchor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.github.os72.protobuf351.ByteString bs = 
            (com.github.os72.protobuf351.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          anchor_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string anchor = 2;</code>
     */
    public com.github.os72.protobuf351.ByteString
        getAnchorBytes() {
      java.lang.Object ref = anchor_;
      if (ref instanceof java.lang.String) {
        com.github.os72.protobuf351.ByteString b = 
            com.github.os72.protobuf351.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        anchor_ = b;
        return b;
      } else {
        return (com.github.os72.protobuf351.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLink()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAnchor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.github.os72.protobuf351.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.github.os72.protobuf351.GeneratedMessageV3.writeString(output, 1, link_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.github.os72.protobuf351.GeneratedMessageV3.writeString(output, 2, anchor_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.github.os72.protobuf351.GeneratedMessageV3.computeStringSize(1, link_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.github.os72.protobuf351.GeneratedMessageV3.computeStringSize(2, anchor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof LinkArrayProto.Link)) {
        return super.equals(obj);
      }
      LinkArrayProto.Link other = (LinkArrayProto.Link) obj;

      boolean result = true;
      result = result && (hasLink() == other.hasLink());
      if (hasLink()) {
        result = result && getLink()
            .equals(other.getLink());
      }
      result = result && (hasAnchor() == other.hasAnchor());
      if (hasAnchor()) {
        result = result && getAnchor()
            .equals(other.getAnchor());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLink()) {
        hash = (37 * hash) + LINK_FIELD_NUMBER;
        hash = (53 * hash) + getLink().hashCode();
      }
      if (hasAnchor()) {
        hash = (37 * hash) + ANCHOR_FIELD_NUMBER;
        hash = (53 * hash) + getAnchor().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static LinkArrayProto.Link parseFrom(
        java.nio.ByteBuffer data)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LinkArrayProto.Link parseFrom(
        java.nio.ByteBuffer data,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LinkArrayProto.Link parseFrom(
        com.github.os72.protobuf351.ByteString data)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LinkArrayProto.Link parseFrom(
        com.github.os72.protobuf351.ByteString data,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LinkArrayProto.Link parseFrom(byte[] data)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LinkArrayProto.Link parseFrom(
        byte[] data,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LinkArrayProto.Link parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static LinkArrayProto.Link parseFrom(
        java.io.InputStream input,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static LinkArrayProto.Link parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static LinkArrayProto.Link parseDelimitedFrom(
        java.io.InputStream input,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static LinkArrayProto.Link parseFrom(
        com.github.os72.protobuf351.CodedInputStream input)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static LinkArrayProto.Link parseFrom(
        com.github.os72.protobuf351.CodedInputStream input,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(LinkArrayProto.Link prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.github.os72.protobuf351.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Link}
     */
    public static final class Builder extends
        com.github.os72.protobuf351.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Link)
        LinkArrayProto.LinkOrBuilder {
      public static final com.github.os72.protobuf351.Descriptors.Descriptor
          getDescriptor() {
        return LinkArrayProto.internal_static_Link_descriptor;
      }

      protected com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LinkArrayProto.internal_static_Link_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                LinkArrayProto.Link.class, LinkArrayProto.Link.Builder.class);
      }

      // Construct using LinkArrayProto.Link.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.github.os72.protobuf351.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.github.os72.protobuf351.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        link_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        anchor_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.github.os72.protobuf351.Descriptors.Descriptor
          getDescriptorForType() {
        return LinkArrayProto.internal_static_Link_descriptor;
      }

      public LinkArrayProto.Link getDefaultInstanceForType() {
        return LinkArrayProto.Link.getDefaultInstance();
      }

      public LinkArrayProto.Link build() {
        LinkArrayProto.Link result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public LinkArrayProto.Link buildPartial() {
        LinkArrayProto.Link result = new LinkArrayProto.Link(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.link_ = link_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.anchor_ = anchor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.github.os72.protobuf351.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.github.os72.protobuf351.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.github.os72.protobuf351.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.github.os72.protobuf351.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.github.os72.protobuf351.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.github.os72.protobuf351.Message other) {
        if (other instanceof LinkArrayProto.Link) {
          return mergeFrom((LinkArrayProto.Link)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(LinkArrayProto.Link other) {
        if (other == LinkArrayProto.Link.getDefaultInstance()) return this;
        if (other.hasLink()) {
          bitField0_ |= 0x00000001;
          link_ = other.link_;
          onChanged();
        }
        if (other.hasAnchor()) {
          bitField0_ |= 0x00000002;
          anchor_ = other.anchor_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLink()) {
          return false;
        }
        if (!hasAnchor()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.github.os72.protobuf351.CodedInputStream input,
          com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        LinkArrayProto.Link parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.github.os72.protobuf351.InvalidProtocolBufferException e) {
          parsedMessage = (LinkArrayProto.Link) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object link_ = "";
      /**
       * <code>required string link = 1;</code>
       */
      public boolean hasLink() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string link = 1;</code>
       */
      public java.lang.String getLink() {
        java.lang.Object ref = link_;
        if (!(ref instanceof java.lang.String)) {
          com.github.os72.protobuf351.ByteString bs =
              (com.github.os72.protobuf351.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            link_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string link = 1;</code>
       */
      public com.github.os72.protobuf351.ByteString
          getLinkBytes() {
        java.lang.Object ref = link_;
        if (ref instanceof String) {
          com.github.os72.protobuf351.ByteString b = 
              com.github.os72.protobuf351.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          link_ = b;
          return b;
        } else {
          return (com.github.os72.protobuf351.ByteString) ref;
        }
      }
      /**
       * <code>required string link = 1;</code>
       */
      public Builder setLink(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        link_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string link = 1;</code>
       */
      public Builder clearLink() {
        bitField0_ = (bitField0_ & ~0x00000001);
        link_ = getDefaultInstance().getLink();
        onChanged();
        return this;
      }
      /**
       * <code>required string link = 1;</code>
       */
      public Builder setLinkBytes(
          com.github.os72.protobuf351.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        link_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object anchor_ = "";
      /**
       * <code>required string anchor = 2;</code>
       */
      public boolean hasAnchor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string anchor = 2;</code>
       */
      public java.lang.String getAnchor() {
        java.lang.Object ref = anchor_;
        if (!(ref instanceof java.lang.String)) {
          com.github.os72.protobuf351.ByteString bs =
              (com.github.os72.protobuf351.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            anchor_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string anchor = 2;</code>
       */
      public com.github.os72.protobuf351.ByteString
          getAnchorBytes() {
        java.lang.Object ref = anchor_;
        if (ref instanceof String) {
          com.github.os72.protobuf351.ByteString b = 
              com.github.os72.protobuf351.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          anchor_ = b;
          return b;
        } else {
          return (com.github.os72.protobuf351.ByteString) ref;
        }
      }
      /**
       * <code>required string anchor = 2;</code>
       */
      public Builder setAnchor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        anchor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string anchor = 2;</code>
       */
      public Builder clearAnchor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        anchor_ = getDefaultInstance().getAnchor();
        onChanged();
        return this;
      }
      /**
       * <code>required string anchor = 2;</code>
       */
      public Builder setAnchorBytes(
          com.github.os72.protobuf351.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        anchor_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.github.os72.protobuf351.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.github.os72.protobuf351.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Link)
    }

    // @@protoc_insertion_point(class_scope:Link)
    private static final LinkArrayProto.Link DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LinkArrayProto.Link();
    }

    public static LinkArrayProto.Link getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.github.os72.protobuf351.Parser<Link>
        PARSER = new com.github.os72.protobuf351.AbstractParser<Link>() {
      public Link parsePartialFrom(
          com.github.os72.protobuf351.CodedInputStream input,
          com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
          throws com.github.os72.protobuf351.InvalidProtocolBufferException {
        return new Link(input, extensionRegistry);
      }
    };

    public static com.github.os72.protobuf351.Parser<Link> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.os72.protobuf351.Parser<Link> getParserForType() {
      return PARSER;
    }

    public LinkArrayProto.Link getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LinkArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LinkArray)
      com.github.os72.protobuf351.MessageOrBuilder {

    /**
     * <code>repeated .Link links = 1;</code>
     */
    java.util.List<LinkArrayProto.Link>
        getLinksList();
    /**
     * <code>repeated .Link links = 1;</code>
     */
    LinkArrayProto.Link getLinks(int index);
    /**
     * <code>repeated .Link links = 1;</code>
     */
    int getLinksCount();
    /**
     * <code>repeated .Link links = 1;</code>
     */
    java.util.List<? extends LinkArrayProto.LinkOrBuilder>
        getLinksOrBuilderList();
    /**
     * <code>repeated .Link links = 1;</code>
     */
    LinkArrayProto.LinkOrBuilder getLinksOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code LinkArray}
   */
  public  static final class LinkArray extends
      com.github.os72.protobuf351.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LinkArray)
      LinkArrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LinkArray.newBuilder() to construct.
    private LinkArray(com.github.os72.protobuf351.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LinkArray() {
      links_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.github.os72.protobuf351.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LinkArray(
        com.github.os72.protobuf351.CodedInputStream input,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.github.os72.protobuf351.UnknownFieldSet.Builder unknownFields =
          com.github.os72.protobuf351.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                links_ = new java.util.ArrayList<LinkArrayProto.Link>();
                mutable_bitField0_ |= 0x00000001;
              }
              links_.add(
                  input.readMessage(LinkArrayProto.Link.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.github.os72.protobuf351.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.github.os72.protobuf351.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          links_ = java.util.Collections.unmodifiableList(links_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.github.os72.protobuf351.Descriptors.Descriptor
        getDescriptor() {
      return LinkArrayProto.internal_static_LinkArray_descriptor;
    }

    protected com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LinkArrayProto.internal_static_LinkArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              LinkArrayProto.LinkArray.class, LinkArrayProto.LinkArray.Builder.class);
    }

    public static final int LINKS_FIELD_NUMBER = 1;
    private java.util.List<LinkArrayProto.Link> links_;
    /**
     * <code>repeated .Link links = 1;</code>
     */
    public java.util.List<LinkArrayProto.Link> getLinksList() {
      return links_;
    }
    /**
     * <code>repeated .Link links = 1;</code>
     */
    public java.util.List<? extends LinkArrayProto.LinkOrBuilder>
        getLinksOrBuilderList() {
      return links_;
    }
    /**
     * <code>repeated .Link links = 1;</code>
     */
    public int getLinksCount() {
      return links_.size();
    }
    /**
     * <code>repeated .Link links = 1;</code>
     */
    public LinkArrayProto.Link getLinks(int index) {
      return links_.get(index);
    }
    /**
     * <code>repeated .Link links = 1;</code>
     */
    public LinkArrayProto.LinkOrBuilder getLinksOrBuilder(
        int index) {
      return links_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getLinksCount(); i++) {
        if (!getLinks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.github.os72.protobuf351.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < links_.size(); i++) {
        output.writeMessage(1, links_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < links_.size(); i++) {
        size += com.github.os72.protobuf351.CodedOutputStream
          .computeMessageSize(1, links_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof LinkArrayProto.LinkArray)) {
        return super.equals(obj);
      }
      LinkArrayProto.LinkArray other = (LinkArrayProto.LinkArray) obj;

      boolean result = true;
      result = result && getLinksList()
          .equals(other.getLinksList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLinksCount() > 0) {
        hash = (37 * hash) + LINKS_FIELD_NUMBER;
        hash = (53 * hash) + getLinksList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static LinkArrayProto.LinkArray parseFrom(
        java.nio.ByteBuffer data)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LinkArrayProto.LinkArray parseFrom(
        java.nio.ByteBuffer data,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LinkArrayProto.LinkArray parseFrom(
        com.github.os72.protobuf351.ByteString data)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LinkArrayProto.LinkArray parseFrom(
        com.github.os72.protobuf351.ByteString data,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LinkArrayProto.LinkArray parseFrom(byte[] data)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LinkArrayProto.LinkArray parseFrom(
        byte[] data,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws com.github.os72.protobuf351.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LinkArrayProto.LinkArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static LinkArrayProto.LinkArray parseFrom(
        java.io.InputStream input,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static LinkArrayProto.LinkArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static LinkArrayProto.LinkArray parseDelimitedFrom(
        java.io.InputStream input,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static LinkArrayProto.LinkArray parseFrom(
        com.github.os72.protobuf351.CodedInputStream input)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static LinkArrayProto.LinkArray parseFrom(
        com.github.os72.protobuf351.CodedInputStream input,
        com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.github.os72.protobuf351.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(LinkArrayProto.LinkArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.github.os72.protobuf351.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LinkArray}
     */
    public static final class Builder extends
        com.github.os72.protobuf351.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LinkArray)
        LinkArrayProto.LinkArrayOrBuilder {
      public static final com.github.os72.protobuf351.Descriptors.Descriptor
          getDescriptor() {
        return LinkArrayProto.internal_static_LinkArray_descriptor;
      }

      protected com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LinkArrayProto.internal_static_LinkArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                LinkArrayProto.LinkArray.class, LinkArrayProto.LinkArray.Builder.class);
      }

      // Construct using LinkArrayProto.LinkArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.github.os72.protobuf351.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.github.os72.protobuf351.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLinksFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          linksBuilder_.clear();
        }
        return this;
      }

      public com.github.os72.protobuf351.Descriptors.Descriptor
          getDescriptorForType() {
        return LinkArrayProto.internal_static_LinkArray_descriptor;
      }

      public LinkArrayProto.LinkArray getDefaultInstanceForType() {
        return LinkArrayProto.LinkArray.getDefaultInstance();
      }

      public LinkArrayProto.LinkArray build() {
        LinkArrayProto.LinkArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public LinkArrayProto.LinkArray buildPartial() {
        LinkArrayProto.LinkArray result = new LinkArrayProto.LinkArray(this);
        int from_bitField0_ = bitField0_;
        if (linksBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            links_ = java.util.Collections.unmodifiableList(links_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.links_ = links_;
        } else {
          result.links_ = linksBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.github.os72.protobuf351.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.github.os72.protobuf351.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.github.os72.protobuf351.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.github.os72.protobuf351.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.github.os72.protobuf351.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.github.os72.protobuf351.Message other) {
        if (other instanceof LinkArrayProto.LinkArray) {
          return mergeFrom((LinkArrayProto.LinkArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(LinkArrayProto.LinkArray other) {
        if (other == LinkArrayProto.LinkArray.getDefaultInstance()) return this;
        if (linksBuilder_ == null) {
          if (!other.links_.isEmpty()) {
            if (links_.isEmpty()) {
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLinksIsMutable();
              links_.addAll(other.links_);
            }
            onChanged();
          }
        } else {
          if (!other.links_.isEmpty()) {
            if (linksBuilder_.isEmpty()) {
              linksBuilder_.dispose();
              linksBuilder_ = null;
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x00000001);
              linksBuilder_ = 
                com.github.os72.protobuf351.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLinksFieldBuilder() : null;
            } else {
              linksBuilder_.addAllMessages(other.links_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getLinksCount(); i++) {
          if (!getLinks(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.github.os72.protobuf351.CodedInputStream input,
          com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        LinkArrayProto.LinkArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.github.os72.protobuf351.InvalidProtocolBufferException e) {
          parsedMessage = (LinkArrayProto.LinkArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<LinkArrayProto.Link> links_ =
        java.util.Collections.emptyList();
      private void ensureLinksIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          links_ = new java.util.ArrayList<LinkArrayProto.Link>(links_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.github.os72.protobuf351.RepeatedFieldBuilderV3<
          LinkArrayProto.Link, LinkArrayProto.Link.Builder, LinkArrayProto.LinkOrBuilder> linksBuilder_;

      /**
       * <code>repeated .Link links = 1;</code>
       */
      public java.util.List<LinkArrayProto.Link> getLinksList() {
        if (linksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(links_);
        } else {
          return linksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public int getLinksCount() {
        if (linksBuilder_ == null) {
          return links_.size();
        } else {
          return linksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public LinkArrayProto.Link getLinks(int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);
        } else {
          return linksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public Builder setLinks(
          int index, LinkArrayProto.Link value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.set(index, value);
          onChanged();
        } else {
          linksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public Builder setLinks(
          int index, LinkArrayProto.Link.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.set(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public Builder addLinks(LinkArrayProto.Link value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(value);
          onChanged();
        } else {
          linksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public Builder addLinks(
          int index, LinkArrayProto.Link value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(index, value);
          onChanged();
        } else {
          linksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public Builder addLinks(
          LinkArrayProto.Link.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public Builder addLinks(
          int index, LinkArrayProto.Link.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public Builder addAllLinks(
          java.lang.Iterable<? extends LinkArrayProto.Link> values) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          com.github.os72.protobuf351.AbstractMessageLite.Builder.addAll(
              values, links_);
          onChanged();
        } else {
          linksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public Builder clearLinks() {
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          linksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public Builder removeLinks(int index) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.remove(index);
          onChanged();
        } else {
          linksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public LinkArrayProto.Link.Builder getLinksBuilder(
          int index) {
        return getLinksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public LinkArrayProto.LinkOrBuilder getLinksOrBuilder(
          int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);  } else {
          return linksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public java.util.List<? extends LinkArrayProto.LinkOrBuilder>
           getLinksOrBuilderList() {
        if (linksBuilder_ != null) {
          return linksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(links_);
        }
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public LinkArrayProto.Link.Builder addLinksBuilder() {
        return getLinksFieldBuilder().addBuilder(
            LinkArrayProto.Link.getDefaultInstance());
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public LinkArrayProto.Link.Builder addLinksBuilder(
          int index) {
        return getLinksFieldBuilder().addBuilder(
            index, LinkArrayProto.Link.getDefaultInstance());
      }
      /**
       * <code>repeated .Link links = 1;</code>
       */
      public java.util.List<LinkArrayProto.Link.Builder>
           getLinksBuilderList() {
        return getLinksFieldBuilder().getBuilderList();
      }
      private com.github.os72.protobuf351.RepeatedFieldBuilderV3<
          LinkArrayProto.Link, LinkArrayProto.Link.Builder, LinkArrayProto.LinkOrBuilder>
          getLinksFieldBuilder() {
        if (linksBuilder_ == null) {
          linksBuilder_ = new com.github.os72.protobuf351.RepeatedFieldBuilderV3<
              LinkArrayProto.Link, LinkArrayProto.Link.Builder, LinkArrayProto.LinkOrBuilder>(
                  links_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          links_ = null;
        }
        return linksBuilder_;
      }
      public final Builder setUnknownFields(
          final com.github.os72.protobuf351.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.github.os72.protobuf351.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LinkArray)
    }

    // @@protoc_insertion_point(class_scope:LinkArray)
    private static final LinkArrayProto.LinkArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LinkArrayProto.LinkArray();
    }

    public static LinkArrayProto.LinkArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.github.os72.protobuf351.Parser<LinkArray>
        PARSER = new com.github.os72.protobuf351.AbstractParser<LinkArray>() {
      public LinkArray parsePartialFrom(
          com.github.os72.protobuf351.CodedInputStream input,
          com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
          throws com.github.os72.protobuf351.InvalidProtocolBufferException {
        return new LinkArray(input, extensionRegistry);
      }
    };

    public static com.github.os72.protobuf351.Parser<LinkArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.os72.protobuf351.Parser<LinkArray> getParserForType() {
      return PARSER;
    }

    public LinkArrayProto.LinkArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.github.os72.protobuf351.Descriptors.Descriptor
    internal_static_Link_descriptor;
  private static final 
    com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable
      internal_static_Link_fieldAccessorTable;
  private static final com.github.os72.protobuf351.Descriptors.Descriptor
    internal_static_LinkArray_descriptor;
  private static final 
    com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable
      internal_static_LinkArray_fieldAccessorTable;

  public static com.github.os72.protobuf351.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.github.os72.protobuf351.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017linkarray.proto\"$\n\004Link\022\014\n\004link\030\001 \002(\t\022" +
      "\016\n\006anchor\030\002 \002(\t\"!\n\tLinkArray\022\024\n\005links\030\001 " +
      "\003(\0132\005.LinkB/\n\035ir.sahab.nimroo.serializat" +
      "ionB\016LinkArrayProto"
    };
    com.github.os72.protobuf351.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.github.os72.protobuf351.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.github.os72.protobuf351.ExtensionRegistry assignDescriptors(
              com.github.os72.protobuf351.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.github.os72.protobuf351.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.github.os72.protobuf351.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Link_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Link_fieldAccessorTable = new
      com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Link_descriptor,
        new java.lang.String[] { "Link", "Anchor", });
    internal_static_LinkArray_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_LinkArray_fieldAccessorTable = new
      com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LinkArray_descriptor,
        new java.lang.String[] { "Links", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
